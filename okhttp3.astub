import org.checkerframework.checker.mustcall.qual.*;
import org.checkerframework.checker.calledmethods.qual.*;
import org.checkerframework.dataflow.qual.SideEffectFree;
import org.checkerframework.common.returnsreceiver.qual.This;

package okhttp3;

class Response{
    @Owning ResponseBody body;

    @MustCallAlias ResponseBody body(@MustCallAlias Response this);

    //Builder class needed methods to be threaded through to the main build() method
    class Builder{
        // Seems like threading the @MustcallAlias through each method causes more warnings to appear, but I commented them out for the mean time.
        // Perhaps threading is unnecessary?

        // @MustCallAlias Builder request(@MustCallAlias Builder this,  Request request)
        // @MustCallAlias Builder protocol(@MustCallAlias Builder this, Protocol protocol)
        // @MustCallAlias Builder code(@MustCallAlias Builder this, Int code)
        // @MustCallAlias Builder message(@MustCallAlias Builder this, String message)
        // @MustCallAlias Builder handshake(@MustCallAlias Builder this, Handshake? handshake)
        // @MustCallAlias Builder header(@MustCallAlias Builder this, String name , String value )
        // @MustCallAlias Builder addHeader(@MustCallAlias Builder this, String name, String value)
        // @MustCallAlias Builder removeHeader(@MustCallAlias Builder this, String name)
        // @MustCallAlias Builder headers(@MustCallAlias Builder this, Headers headers )
        // @MustCallAlias Builder trailers(@MustCallAlias Builder this, trailersFn: (() -> Headers))
        // @MustCallAlias Builder body(@MustCallAlias Builder this, ResponseBody body)
        // @MustCallAlias Builder networkResponse(@MustCallAlias Builder this, Response? networkResponse)
        // @MustCallAlias Builder cacheResponse(@MustCallAlias Builder this,Response? cacheResponse )
        // @MustCallAlias Builder priorResponse(@MustCallAlias Builder this,Response? priorResponse )
        @MustCallAlias Response build(@MustCallAlias Builder this);
    }
}

class ResponseBody{
    //  Used to associated the BufferedSource field variable with the BufferedSource returned by the method.
    @MustCallAlias BufferedSouce source(@MustCallAlias ResponseBody this);
}

class Call{
    //  Used to associated the Response field variable in Call with the Response object returned by the method.
    @MustCallAlias Response execute(@MustCallAlias Call this);
}

